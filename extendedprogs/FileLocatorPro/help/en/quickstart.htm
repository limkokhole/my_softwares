<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<!-- saved from url=(0029)http://www.helpandmanual.com/ -->
<head>
   <title>Quick Start</title>
   <meta name="generator" content="Help &amp; Manual" />
   <meta name="keywords" content="Quick start" />
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
   <meta http-equiv="Content-Style-Type" content="text/css" />
   <link type="text/css" href="default.css" rel="stylesheet" />
<script type="text/javascript" src="helpman_topicinit.js"></script>
<!-- Redirect browser to frame page if page is not in the content frame. -->
<script type="text/javascript">
<!--
if (location.search.lastIndexOf("toc=0")<=0) {
  if (parent.frames.length==0) { parent.location.href="index.html?quickstart.htm"; }
  else { parent.quicksync('a5.1'); }
}
//-->
</script>
<script type="text/javascript" src="highlight.js"></script></head>
<body style="margin: 0px 0px 0px 0px; background: #FFFFFF;" onload="highlight();">
<div id="hmpopupDiv" style="visibility:hidden; position:absolute; z-index:1000; "></div>


<table width="100%" border="0" cellspacing="0" cellpadding="5" bgcolor="#649CCC">
  <tr valign="middle">
    <td align="left">
      <p class="p_Heading1"><span class="f_Heading1">Quick Start</span></p>

    </td>
    <td align="right">
     <span style="font-size: 9pt">
     <a href="introduction.htm">Top</a>&nbsp;
     <a href="regular_expressions.htm">Previous</a>&nbsp;
     <a href="regularexpressionintroduction.htm">Next</a>
     </span>
    </td>
  </tr>
</table>


<!-- Placeholder for topic body. -->
<table width="100%" border="0" cellspacing="0" cellpadding="5"><tr valign="top"><td align="left">
<p>&nbsp;</p>
<p><span class="f_Format3">FileLocator Pro includes a regular expression engine as one of its <a href="expressiontypes.htm">Expression Types</a>. Regular expressions (some times shortened to regexp) provide a concise language to describe exactly what to search for. In very basic terms you can split an expression into two parts:</span></p>
<p><span class="f_Format3">- what you are looking for</span></p>
<p><span class="f_Format3">- the number of occurrences you want to find of it.</span></p>
<p>&nbsp;</p>
<p><span class="f_Format3">So let's take an example:</span></p>
<p><span class="f_Format3">1. I want to find all files named abc, abbc, abbbc, abbbbc etc. So basically I want to find all files that begin with 'a' followed by one or more 'b' then followed by 'c'. The expression would be:</span></p>
<p><span class="f_Format3">ab+c</span></p>
<p>&nbsp;</p>
<p><span class="f_Format3">Breaking that apart we read:</span></p>
<p><span class="f_Format3">- find one occurrence of 'a'</span></p>
<p><span class="f_Format3">- find at least one occurrence of 'b' (the '+' indicates 'one or more')</span></p>
<p><span class="f_Format3">- find one occurrence of 'c'</span></p>
<p>&nbsp;</p>
<p><span class="f_Format3">The characters that specify the number of occurrences are:</span></p>
<p><span class="f_Format3">+ one or more</span></p>
<p><span class="f_Format3">* zero or more</span></p>
<p><span class="f_Format3">? zero or one</span></p>
<p>&nbsp;</p>
<p><span class="f_Format3">So ab?c would find any file named abc or ac (i.e. there can be zero or one 'b').</span></p>
<p>&nbsp;</p>
<p><span class="f_Format3">A very important regexp character is the period '.' (the wildcard character) because it matches to ANY character. So a.c would match to aac, abc, acc, adc, aec, afc, a1c, a6c etc. And if we combine that with an occurrence character we can start producing some useful expressions:</span></p>
<p><span class="f_Format3">dave.*vest</span></p>
<p>&nbsp;</p>
<p><span class="f_Format3">breaks down to:</span></p>
<p><span class="f_Format3">- find one occurrence of 'd'</span></p>
<p><span class="f_Format3">- then one occurrence of 'a'</span></p>
<p><span class="f_Format3">- then one occurrence of 'v'</span></p>
<p><span class="f_Format3">- then one occurrence of 'e'</span></p>
<p><span class="f_Format3">- then zero or more occurrences of ANY character</span></p>
<p><span class="f_Format3">- then one occurrence of 'v'</span></p>
<p><span class="f_Format3">- then one occurrence of 'e'</span></p>
<p><span class="f_Format3">- then one occurrence of 's'</span></p>
<p><span class="f_Format3">- then one occurrence of 't'</span></p>
<p>&nbsp;</p>
<p><span class="f_Format3">and so matches to 'davevest', 'dave vest', 'dave is wearing a vest'.</span></p>
<p>&nbsp;</p>
<p><span class="f_Format3">There are other regexp characters and tricks on the following pages. <a href="regularexpressionbasics.htm">More detail on regular expressions.</a></span></p>
<p>&nbsp;</p>

</td></tr></table>
<hr>
<font face="Arial" size="-2">
Copyright &copy; 2013 Mythicsoft Ltd. All rights reserved.
<br />
Help file version: 7.0<br />
<br />
PDF and CHM versions of this help file are available here:<br />
<a href="http://mythicsoft.com/filelocatorpro/help" target="_blank">http://mythicsoft.com/filelocatorpro/help</a><br /> 
    <br />
</font>

</body>
</html>
